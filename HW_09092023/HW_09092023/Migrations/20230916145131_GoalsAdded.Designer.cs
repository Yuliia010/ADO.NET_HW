// <auto-generated />
using HW_09092023.Types.FootballTournament;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HW_09092023.Migrations
{
    [DbContext(typeof(FootballTournamentContext))]
    [Migration("20230916145131_GoalsAdded")]
    partial class GoalsAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HW_09092023.Types.FootballTournament.Models.TeamInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Defeats")
                        .HasColumnType("int");

                    b.Property<int>("GamesDrawn")
                        .HasColumnType("int");

                    b.Property<int>("GoalsConceded")
                        .HasColumnType("int");

                    b.Property<int>("GoalsScored")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Victories")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Kyiv",
                            Defeats = 2,
                            GamesDrawn = 5,
                            GoalsConceded = 0,
                            GoalsScored = 0,
                            Name = "Wolfs",
                            Victories = 12
                        },
                        new
                        {
                            Id = 2,
                            City = "Lviv",
                            Defeats = 5,
                            GamesDrawn = 2,
                            GoalsConceded = 0,
                            GoalsScored = 0,
                            Name = "Cats",
                            Victories = 7
                        },
                        new
                        {
                            Id = 3,
                            City = "Rivne",
                            Defeats = 1,
                            GamesDrawn = 5,
                            GoalsConceded = 0,
                            GoalsScored = 0,
                            Name = "Devs",
                            Victories = 9
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
